---
import PrimaryButton from '@components/PrimaryButton.astro'
import FileIcon from '@components/icons/FileIcon.astro'
import ShareDocumentModal from './ShareDocumentModal.astro'

interface Props {
  showControls?: boolean
}

const { showControls } = Astro.props
---

<ShareDocumentModal id="share-document-modal" />

<div class="h-96 w-[90%] mx-auto">
  <textarea id="document-editor"></textarea>
</div>

{
  showControls && (
    <PrimaryButton
      id="btn-share"
      className="flex items-center gap-2 text-lg mt-10 mx-auto">
      Share document <FileIcon />
    </PrimaryButton>
  )
}

<script>
  import { DocumentType } from '@constants'
  import { Notyf } from 'notyf'
  import 'notyf/notyf.min.css'

  /* Import TinyMCE */
  import tinymce from 'tinymce'

  /* Default icons are required. After that, import custom icons if applicable */
  import 'tinymce/icons/default/icons.min.js'

  /* Required TinyMCE components */
  import 'tinymce/themes/silver/theme.min.js'
  import 'tinymce/models/dom/model.min.js'

  /* Import a skin (can be a custom skin instead of the default) */
  import 'tinymce/skins/ui/oxide-dark/skin.js'

  /* Import plugins */
  import 'tinymce/plugins/autosave'
  import 'tinymce/plugins/code'
  import 'tinymce/plugins/autolink'
  import 'tinymce/plugins/fullscreen'
  import 'tinymce/plugins/insertdatetime'
  import 'tinymce/plugins/wordcount'
  import 'tinymce/plugins/searchreplace'
  import 'tinymce/plugins/preview'
  import 'tinymce/plugins/visualblocks'
  import 'tinymce/plugins/advlist'
  import 'tinymce/plugins/code'
  import 'tinymce/plugins/emoticons'
  import 'tinymce/plugins/emoticons/js/emojis'
  import 'tinymce/plugins/link'
  import 'tinymce/plugins/lists'
  import 'tinymce/plugins/table'

  /* content UI CSS is required */
  import 'tinymce/skins/ui/oxide-dark/content.js'

  /* The default content CSS can be changed or replaced with appropriate CSS for the editor content. */
  import 'tinymce/skins/content/dark/content.js'

  const btnShare = document.getElementById('btn-share') as HTMLButtonElement
  const modal = document.getElementById(
    'share-document-modal'
  ) as HTMLDivElement
  const txtModalLink = document.getElementById(
    'modal-txt-link'
  ) as HTMLSpanElement
  const notyf = new Notyf()

  tinymce.init({
    selector: '#document-editor',
    resize: false,
    plugins:
      'advlist code emoticons link lists table autosave preview wordcount searchreplace code autolink fullscreen visualblocks insertdatetime',
    toolbar:
      'undo redo | blocks | bold italic backcolor emoticons | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat',
    skin_url: 'dark',
    content_css: 'dark',
    promotion: false,
    license_key: 'gpl'
  })

  btnShare?.addEventListener('click', async () => {
    const content = tinymce.get('document-editor')!.getContent()

    if (content.trim().length === 0) {
      notyf.error('Please enter some content')
      return
    }

    notyf.open({
      type: 'custom',
      message: 'Uploading document...',
      background: '#262626',
      duration: 5000
    })

    const response = await fetch('/api/documents', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        content,
        type: DocumentType.document
      })
    })
    const data = await response.json()

    if (response.ok) {
      notyf.dismissAll()

      modal.classList.remove('hidden')
      modal.setAttribute('aria-hidden', 'false')
      txtModalLink.innerText = data.url

      notyf.success('Document shared successfully')
      tinymce.get('document-editor')!.setContent('')
    } else {
      notyf.dismissAll()
      notyf.error('Something went wrong')
    }
  })
</script>
